#!/usr/bin/env python

import json
import sys
import glob

fact={}
inst={}
tomcat={"next_port":""}
activemq={"next_port":""}
artemis={"next_port":""}
tomcat_start_port=8100
t_ports=[]
activemq_start_port=15930
a_ports=[]
artemis_start_port=25750
art_ports=[]

# get the list of instances
instances=glob.glob("{{ storage_path }}/instances/*")

for i in instances:
    instance_name = i.split('/')[-1]
    i_facts = {}

    # try to get the facts from the json file in the instance
    try:
        instance_facts=i+"/home/instance.fact.json"
        ifile=open(instance_facts,'r')
        i_facts = json.load(ifile)
        ifile.close()

    except:
        # If that fails, try to get facts from the INI file format
        try:
            instance_facts=i+"/home/instance.fact"
            ifile=open(instance_facts,'r')
            ini_facts = ifile.readlines()
            for f in ini_facts:
                kv=f.strip().split('=')
                try:
                    i_facts[kv[0]]=kv[1]
                except:
                    pass
            ifile.close()

            # uncomment and run as dhis locally to convert the INI to json files
            # instance_facts_json=i+"/home/instance.fact.json"
            # ofile=open(instance_facts_json,'w')
            # ofile.write(json.dumps(i_facts, indent=2, separators=(',', ': ')))
            # ofile.close()

        except:
          pass

    if i_facts:
        inst[instance_name]=i_facts
        try:
            t_ports.append(i_facts["tomcat_port"])
            a_ports.append(i_facts["activemq_port"])
            art_ports.append(i_facts["artemis_port"])
        except:
            pass


for t in xrange(tomcat_start_port, tomcat_start_port + len(t_ports) + 1):
    use = '{}'.format(t)
    if not use in t_ports:
        tomcat["next_port"] = t
        break

for a in xrange(activemq_start_port, activemq_start_port + len(a_ports) + 1):
    use = '{}'.format(a)
    if not use in a_ports:
        activemq["next_port"] = a
        break

for a in xrange(artemis_start_port, artemis_start_port + len(art_ports) + 1):
    use = '{}'.format(a)
    if not use in art_ports:
        artemis["next_port"] = a
        break

fact["instances"]=inst
fact["tomcat"]=tomcat
fact["activemq"]=activemq
fact["artemis"]=artemis

# output the facts
print json.dumps(fact)
