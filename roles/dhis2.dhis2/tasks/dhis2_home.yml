---
# add users
- group:
    name: "{{ dhis2_user }}"
    state: present

- user:
    name: "{{ dhis2_user }}"
    group: "{{ dhis2_user }}"
    shell: /bin/bash

- user:
    name: ubuntu
    groups: "{{ dhis2_user }}"


- name: set the instance locations
  set_fact:
    storage: "{{ storage_path | default('/var/lib') }}"
    fs_type: "{{ dhis2_filestore.type }}"

# deploy standalone tomcat instance for each dhis2 instance
- name: download tomcat
  unarchive:
    src: https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.50/bin/apache-tomcat-8.5.50.tar.gz
    dest: /tmp
    remote_src: yes
  args:
    creates: /tmp/apache-tomcat-8.5.50

# create a directory if it doesn't exist
- file:
    path: "{{ storage }}/instances/{{ instance.name }}/home"
    state: directory
    mode: 0755

- command: cp -r /tmp/apache-tomcat-8.5.50 {{ storage }}/instances/{{ instance.name }}/tomcat
  args:
    creates: "{{ storage }}/instances/{{ instance.name }}/tomcat"

- name: remove bundled webapps
  shell: /bin/rm -rf {{ storage }}/instances/{{ instance.name }}/tomcat/webapps/*
  args:
    warn: no


- name: Configure host based authentication (if entries are configured).
  template:
    src: "dhis.conf.j2"
    dest: "{{ storage }}/instances/{{ instance.name }}/home/dhis.conf"
    owner: "{{ dhis2_user }}"
    group: "{{ dhis2_user }}"
    mode: 0600
    #notify: restart tomcat

- name: Store ansible facts describing the instance
  template:
    src: "instance.fact.j2"
    dest: "{{ storage }}/instances/{{ instance.name }}/home/instance.fact"
    owner: "{{ dhis2_user }}"
    group: "{{ dhis2_user }}"
    mode: 0600

# - name: Store ansible facts describing the instance (json format)
#   template:
#     src: "instance.fact.json.j2"
#     dest: "{{ storage }}/instances/{{ instance.name }}/home/instance.fact.json"
#     owner: "{{ dhis2_user }}"
#     group: "{{ dhis2_user }}"
#     mode: 0600

- name: Configure tomcat ports.
  template:
    src: "server.xml.j2"
    dest: "{{ storage }}/instances/{{ instance.name }}/tomcat/conf/server.xml"
    owner: "{{ dhis2_user }}"
    group: "{{ dhis2_user }}"
    mode: 0600
    #notify: restart tomcat

- name: set tomcat environment
  blockinfile:
    path: "{{ storage }}/instances/{{ instance.name }}/tomcat/bin/setclasspath.sh"
    block: |
      export DHIS2_HOME='{{ storage }}/instances/{{ instance.name }}/home'
      export JAVA_OPTS='{{ java_opts }} -Djava.security.egd=file:/dev/./urandom'
      export CATALINA_PID='/var/run/tomcat/{{ instance.name }}.pid'

- file:
    path: "/var/run/tomcat"
    group: "{{ dhis2_user }}"
    owner: "{{ dhis2_user }}"
    recurse: yes


- name: set up tomcat as a systemd service
  template:
    src: "dhis2.service.j2"
    dest: "/etc/systemd/system/dhis2-{{ instance.name }}.service"
    mode: 0777
    #notify: restart tomcat

- name: force systemd to reread configs
  systemd:
    daemon_reload: yes

- file:
    path: "{{ storage }}/instances/{{ instance.name }}"
    group: "{{ dhis2_user }}"
    owner: "{{ dhis2_user }}"
    recurse: yes

- name: add google auth
  template:
    src: "dhis-google-auth.json.j2"
    dest: "{{ storage }}/instances/{{ instance.name }}/home/dhis-google-auth.json"
    mode: 0644


- name: add the instance tomcat logs to filebeat
  replace:
    path: /etc/filebeat/filebeat.yml
    regexp: 'CATALINA-PLACEHOLDER.out'
    replace: '{{ storage }}/instances/*/tomcat/logs/catalina.out'
  notify: restart filebeat


- name: set log rotation for tomcat logs
  blockinfile:
    path: /etc/logrotate.d/tomcat-{{ instance.name }}
    block: |
      {{ storage }}/instances/{{ instance.name }}/tomcat/logs/catalina.out {   copytruncate   daily   rotate 7   compress   missingok   size 5M  }
    create: yes
