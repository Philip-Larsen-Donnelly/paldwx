---
# Deploy in parallel on tomcat - not entirely sure we want to do this as it could cause corruption due to flyway changes?!

# - name: get next version for war file
#   shell: "version=`find {{ storage }}/instances/{{ instance.name }}/tomcat/webapps/ -maxdepth 1 -name '{{ instance.name }}##*.war' | sort | tail -n1 | sed -n 's/.*##0*\\(.*\\)\\.war/\\1/p'` ;   printf %04d $((version+1))"
#   register: next_instance_version
#
# - name: deploy war file as next version
#   get_url:
#     url: "{{ instance.war_file }}"
#     dest: "{{ storage }}/instances/{{ instance.name }}/tomcat/webapps/{{ instance.name }}##{{ next_instance_version.stdout }}.war"
#     mode: 0644

# check if we need to do anything:
# make a temporary file for the war:
- name: create temporary file
  tempfile:
    state: file
    suffix: war
  register: temp_war

- name: download the latest war file to temporary file
  get_url:
    url: "{{ instance.war_file }}"
    dest: "{{ temp_war.path }}"
    mode: 0644
    force: yes

# get checksum of new war file
- name: get checksum of new war file
  stat:
    path: "{{ temp_war.path }}"
    get_checksum: yes
  run_once: true
  register: new_war

# get checksum of current war file
- name: get checksum of current war file
  stat:
    path: "{{ storage }}/instances/{{ instance.name }}/tomcat/webapps/{{ instance.name }}.war"
    get_checksum: yes
  run_once: true
  register: current_war

- name: The war needs an update
  block:
  - name: add redirect to nginx config
    blockinfile:
      path: "/etc/nginx/conf.d/default.conf"
      block: |
          location /{{ instance.name }} {
              rewrite ^ /{{ instance.name }}_deploy_war/ ;
          }
          location /{{ instance.name }}_deploy_war {
              alias /usr/share/nginx/html;
              index deploy_war.html break;
          }
      marker: "# {mark} ANSIBLE MANAGED BLOCK {{ instance.name }}"
      insertbefore: "# END DHIS2-INSTANCES:"
      state: "{{Â instance.state }}"
    notify: reload nginx

  - name: reload nginx
    systemd:
      state: reloaded
      name: nginx

  - name: stop the instance
    systemd:
      state: stopped
      name: dhis2-{{ instance.name }}

  - name: deploy the war file
    copy:
      src: "{{ temp_war.path }}"
      dest: "{{ storage }}/instances/{{ instance.name }}/tomcat/webapps/{{ instance.name }}.war"
      remote_src: yes
  when: new_war.stat.checksum != current_war.stat.checksum|d('')

- name: delete the temp file
  file:
    path: "{{ temp_war.path }}"
    state: absent
